/*******************************************************************************
 * Copyright (c) 2010-2015, Csaba Debreceni, Istvan Rath and Daniel Varro
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-v20.html.
 * 
 * SPDX-License-Identifier: EPL-2.0
 *******************************************************************************/
package org.eclipse.viatra.addon.viewers.runtime.model.patterns

import "http://www.eclipse.org/viatra/transformation/views/traceability/1.0"
import "http://www.eclipse.org/viatra/addon/viewers/notation/1.0"

pattern param2item(param : java Object, trace : Trace, item : Item) {
	Trace.params(trace, param);
	Trace.targets(trace, item);
} or {
	Trace.objects(trace, param);
	Trace.targets(trace, item);
}

pattern param2edge(source : java Object, target : java Object, trace : Trace, edge : Edge) {
	Trace.params(trace, source);
	Trace.params(trace, target);
	Trace.targets(trace, edge);
} or {
	Trace.objects(trace, source);
	Trace.params(trace, target);
	Trace.targets(trace, edge);
} or {
	Trace.params(trace, source);
	Trace.objects(trace, target);
	Trace.targets(trace, edge);
} or {
	Trace.objects(trace, source);
	Trace.objects(trace, target);
	Trace.targets(trace, edge);
}

pattern param2containment(source : java Object, target : java Object, trace : Trace, containment : Containment) {
	Trace.params(trace, source);
	Trace.params(trace, target);
	Trace.targets(trace, containment);
} or {
	Trace.objects(trace, source);
	Trace.params(trace, target);
	Trace.targets(trace, containment);
} or {
	Trace.params(trace, source);
	Trace.objects(trace, target);
	Trace.targets(trace, containment);
} or {
	Trace.objects(trace, source);
	Trace.objects(trace, target);
	Trace.targets(trace, containment);
}

pattern children(parent:Item, child:Item) {
	Containment.source(c, parent);
	Containment.target(c, child);
}

