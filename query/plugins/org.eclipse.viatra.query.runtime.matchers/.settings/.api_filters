<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<component id="org.eclipse.viatra.query.runtime.matchers" version="2">
    <resource path="META-INF/MANIFEST.MF">
        <filter comment="When the DDF recursive aggregation was merged, this error was reported by API Tools, but there seems no reason for it. Adding a special exception here." id="923795461">
            <message_arguments>
                <message_argument value="2.4.0"/>
                <message_argument value="2.3.0"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="META-INF/MANIFEST.MF" type="org.eclipse.viatra.query.runtime.matchers.memories.TimestampReplacement">
        <filter comment="internal API change" id="305324134">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.TimestampReplacement"/>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers_2.4.0"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/DoubleAverageOperator.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.DoubleAverageOperator">
        <filter comment="Internal implementation of the experimental aggregator API" id="576725006">
            <message_arguments>
                <message_argument value="IMultisetAggregationOperator&lt;Domain, Accumulator, AggregateResult&gt;"/>
                <message_argument value="DoubleAverageOperator"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/DoubleSumOperator.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.DoubleSumOperator">
        <filter id="576720909">
            <message_arguments>
                <message_argument value="AbstractMemorylessAggregationOperator&lt;Domain, AggregateResult&gt;"/>
                <message_argument value="DoubleSumOperator"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/ExtremumOperator.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.ExtremumOperator">
        <filter comment="Internal implementation of the experimental aggregator API" id="576725006">
            <message_arguments>
                <message_argument value="IMultisetAggregationOperator&lt;Domain, Accumulator, AggregateResult&gt;"/>
                <message_argument value="ExtremumOperator&lt;T&gt;"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/IntegerAverageOperator.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.IntegerAverageOperator">
        <filter comment="Internal implementation of the experimental aggregator API" id="576725006">
            <message_arguments>
                <message_argument value="IMultisetAggregationOperator&lt;Domain, Accumulator, AggregateResult&gt;"/>
                <message_argument value="IntegerAverageOperator"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/IntegerSumOperator.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.IntegerSumOperator">
        <filter id="576720909">
            <message_arguments>
                <message_argument value="AbstractMemorylessAggregationOperator&lt;Domain, AggregateResult&gt;"/>
                <message_argument value="IntegerSumOperator"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/LongAverageOperator.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.LongAverageOperator">
        <filter comment="Internal implementation of the experimental aggregator API" id="576725006">
            <message_arguments>
                <message_argument value="IMultisetAggregationOperator&lt;Domain, Accumulator, AggregateResult&gt;"/>
                <message_argument value="LongAverageOperator"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/LongSumOperator.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.LongSumOperator">
        <filter id="576720909">
            <message_arguments>
                <message_argument value="AbstractMemorylessAggregationOperator&lt;Domain, AggregateResult&gt;"/>
                <message_argument value="LongSumOperator"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/avg.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.avg">
        <filter comment="Internal implementation of the experimental aggregator API" id="576725006">
            <message_arguments>
                <message_argument value="IAggregatorFactory"/>
                <message_argument value="avg"/>
            </message_arguments>
        </filter>
        <filter comment="Internal implementation of the experimental aggregator API" id="643842064">
            <message_arguments>
                <message_argument value="BoundAggregator"/>
                <message_argument value="avg"/>
                <message_argument value="getAggregatorLogic(Class&lt;?&gt;)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/count.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.count">
        <filter comment="IAggregatorFactory is non-final API" id="576725006">
            <message_arguments>
                <message_argument value="IAggregatorFactory"/>
                <message_argument value="count"/>
            </message_arguments>
        </filter>
        <filter comment="BoundAggregator is non-final API" id="643842064">
            <message_arguments>
                <message_argument value="BoundAggregator"/>
                <message_argument value="count"/>
                <message_argument value="getAggregatorLogic(Class&lt;?&gt;)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/max.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.max">
        <filter comment="IAggregatorFactory is non-final API" id="576725006">
            <message_arguments>
                <message_argument value="IAggregatorFactory"/>
                <message_argument value="max"/>
            </message_arguments>
        </filter>
        <filter comment="BoundAggregator is non-final API" id="643842064">
            <message_arguments>
                <message_argument value="BoundAggregator"/>
                <message_argument value="max"/>
                <message_argument value="getAggregatorLogic(Class&lt;?&gt;)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/min.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.min">
        <filter comment="IAggregatorFactory is non-final API" id="576725006">
            <message_arguments>
                <message_argument value="IAggregatorFactory"/>
                <message_argument value="min"/>
            </message_arguments>
        </filter>
        <filter comment="BoundAggregator is non-final API" id="643842064">
            <message_arguments>
                <message_argument value="BoundAggregator"/>
                <message_argument value="min"/>
                <message_argument value="getAggregatorLogic(Class&lt;?&gt;)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/sum.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.sum">
        <filter comment="IAggregatorFactory is non-final API" id="576725006">
            <message_arguments>
                <message_argument value="IAggregatorFactory"/>
                <message_argument value="sum"/>
            </message_arguments>
        </filter>
        <filter comment="BoundAggregator is non-final API" id="643842064">
            <message_arguments>
                <message_argument value="BoundAggregator"/>
                <message_argument value="sum"/>
                <message_argument value="getAggregatorLogic(Class&lt;?&gt;)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/context/AbstractQueryMetaContext.java" type="org.eclipse.viatra.query.runtime.matchers.context.AbstractQueryMetaContext">
        <filter comment="Internal API implementation" id="576725006">
            <message_arguments>
                <message_argument value="IQueryMetaContext"/>
                <message_argument value="AbstractQueryMetaContext"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/context/AbstractQueryRuntimeContext.java" type="org.eclipse.viatra.query.runtime.matchers.context.AbstractQueryRuntimeContext">
        <filter comment="Internal API implementation" id="576725006">
            <message_arguments>
                <message_argument value="IQueryRuntimeContext"/>
                <message_argument value="AbstractQueryRuntimeContext"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/memories/DefaultMaskedTupleMemory.java" type="org.eclipse.viatra.query.runtime.matchers.memories.DefaultMaskedTupleMemory">
        <filter comment="internal API update" id="338792546">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.DefaultMaskedTupleMemory"/>
                <message_argument value="getWithTimestamp(ITuple)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/memories/MaskedTupleMemory.java" type="org.eclipse.viatra.query.runtime.matchers.memories.MaskedTupleMemory">
        <filter comment="internal API update" id="338792546">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.MaskedTupleMemory"/>
                <message_argument value="addWithTimestamp(Tuple, Timestamp)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="338792546">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.MaskedTupleMemory"/>
                <message_argument value="addWithTimestamp(Tuple, Tuple, Timestamp)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="338792546">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.MaskedTupleMemory"/>
                <message_argument value="getOrEmptyWithTimestamp(ITuple)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="338792546">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.MaskedTupleMemory"/>
                <message_argument value="getWithTimestamp(ITuple)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="338792546">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.MaskedTupleMemory"/>
                <message_argument value="removeWithTimestamp(Tuple, Timestamp)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="338792546">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.MaskedTupleMemory"/>
                <message_argument value="removeWithTimestamp(Tuple, Tuple, Timestamp)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="388100214">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.MaskedTupleMemory"/>
                <message_argument value="mask"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="388100214">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.MaskedTupleMemory"/>
                <message_argument value="owner"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/memories/UnaryMaskedTupleMemory.java" type="org.eclipse.viatra.query.runtime.matchers.memories.UnaryMaskedTupleMemory">
        <filter comment="internal API update" id="338792546">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.UnaryMaskedTupleMemory"/>
                <message_argument value="getWithTimestamp(ITuple)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/psystem/InitializablePQuery.java" type="org.eclipse.viatra.query.runtime.matchers.psystem.InitializablePQuery">
        <filter comment="Internal API implementation" id="576720909">
            <message_arguments>
                <message_argument value="PQuery"/>
                <message_argument value="InitializablePQuery"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/psystem/basicdeferred/AggregatorConstraint.java" type="org.eclipse.viatra.query.runtime.matchers.psystem.basicdeferred.AggregatorConstraint">
        <filter id="643842064">
            <message_arguments>
                <message_argument value="BoundAggregator"/>
                <message_argument value="AggregatorConstraint"/>
                <message_argument value="getAggregator()"/>
            </message_arguments>
        </filter>
        <filter id="643850349">
            <message_arguments>
                <message_argument value="BoundAggregator"/>
                <message_argument value="AggregatorConstraint"/>
                <message_argument value="AggregatorConstraint(BoundAggregator, PBody, Tuple, PQuery, PVariable, int)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/psystem/queries/BasePQuery.java" type="org.eclipse.viatra.query.runtime.matchers.psystem.queries.BasePQuery">
        <filter comment="Internal API implementation" id="576725006">
            <message_arguments>
                <message_argument value="PQuery"/>
                <message_argument value="BasePQuery"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/psystem/rewriters/IRewriterTraceCollector.java" type="org.eclipse.viatra.query.runtime.matchers.psystem.rewriters.IRewriterTraceCollector">
        <filter comment="Internal API implementation" id="576720909">
            <message_arguments>
                <message_argument value="IPTraceableTraceProvider"/>
                <message_argument value="IRewriterTraceCollector"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/util/TimelyMemory.java" type="org.eclipse.viatra.query.runtime.matchers.util.TimelyMemory">
        <filter comment="internal API update" id="338755678">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.util.TimelyMemory"/>
                <message_argument value="leastTimestampMemory"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="338755678">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.util.TimelyMemory"/>
                <message_argument value="orderedTimestampMemory"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="338792546">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.util.TimelyMemory"/>
                <message_argument value="get(ITuple)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="338792546">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.util.TimelyMemory"/>
                <message_argument value="put(Tuple, Timestamp)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="338792546">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.util.TimelyMemory"/>
                <message_argument value="remove(Tuple, Timestamp)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="EMPTY_DIFF"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="TimelyMemory(boolean)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="addFoldingState(Tuple, TimelyMemory.FoldingState, Timestamp)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="computeDiffsEager(Direction, TimelyMemory.CumulativeCounter, TimelyMemory.SignChange, Timestamp, Diff&lt;Timestamp&gt;)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="computeDiffsLazy(Direction, int, int, Timestamp, Timestamp, Diff&lt;Timestamp&gt;)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="counters"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="doFoldingStep(Tuple, TimelyMemory.FoldingState, Timestamp)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="foldingState"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="gcCounters(TimelyMemory.CumulativeCounter, Tuple, Timestamp)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="get(ITuple)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="getCountAtInfinity()"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="getCounter(Tuple, Timestamp)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="getResumableTuples()"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="getTuplesAtInfinity()"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="isLazy"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="isPresentAtInfinity(Tuple)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="presentAtInfinity"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="put(Tuple, Timestamp)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="putEager(Tuple, Timestamp)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="putLazy(Tuple, Timestamp)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="remove(Tuple, Timestamp)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="removeEager(Tuple, Timestamp)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="removeLazy(Tuple, Timestamp)"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="timelines"/>
            </message_arguments>
        </filter>
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="updateTimeline(Tuple, Diff&lt;Timestamp&gt;)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/util/TimelyMemory.java" type="org.eclipse.viatra.query.runtime.matchers.util.TimelyMemory$CumulativeCounter">
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="CumulativeCounter"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/util/TimelyMemory.java" type="org.eclipse.viatra.query.runtime.matchers.util.TimelyMemory$FoldingState">
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="FoldingState"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/util/TimelyMemory.java" type="org.eclipse.viatra.query.runtime.matchers.util.TimelyMemory$SignChange">
        <filter comment="internal API update" id="1143996420">
            <message_arguments>
                <message_argument value="SignChange"/>
            </message_arguments>
        </filter>
    </resource>
</component>
