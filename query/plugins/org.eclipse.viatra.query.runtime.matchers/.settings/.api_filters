<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<component id="org.eclipse.viatra.query.runtime.matchers" version="2">
    <resource path="META-INF/MANIFEST.MF">
        <filter id="923795461">
            <message_arguments>
                <message_argument value="2.2.0"/>
                <message_argument value="2.1.0"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="META-INF/MANIFEST.MF" type="org.eclipse.viatra.query.runtime.matchers.memories.AbstractSetBackedMaskedTupleMemory">
        <filter id="305324134">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.AbstractSetBackedMaskedTupleMemory"/>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers_2.1.0"/>
            </message_arguments>
        </filter>
        <filter id="305324134">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.AbstractSetBackedMaskedTupleMemory"/>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers_2.2.0"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/DoubleAverageOperator.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.DoubleAverageOperator">
        <filter comment="Internal implementation of the experimental aggregator API" id="576725006">
            <message_arguments>
                <message_argument value="IMultisetAggregationOperator&lt;Domain, Accumulator, AggregateResult&gt;"/>
                <message_argument value="DoubleAverageOperator"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/DoubleSumOperator.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.DoubleSumOperator">
        <filter id="576720909">
            <message_arguments>
                <message_argument value="AbstractMemorylessAggregationOperator&lt;Domain, AggregateResult&gt;"/>
                <message_argument value="DoubleSumOperator"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/ExtremumOperator.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.ExtremumOperator">
        <filter comment="Internal implementation of the experimental aggregator API" id="576725006">
            <message_arguments>
                <message_argument value="IMultisetAggregationOperator&lt;Domain, Accumulator, AggregateResult&gt;"/>
                <message_argument value="ExtremumOperator&lt;T&gt;"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/IntegerAverageOperator.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.IntegerAverageOperator">
        <filter comment="Internal implementation of the experimental aggregator API" id="576725006">
            <message_arguments>
                <message_argument value="IMultisetAggregationOperator&lt;Domain, Accumulator, AggregateResult&gt;"/>
                <message_argument value="IntegerAverageOperator"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/IntegerSumOperator.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.IntegerSumOperator">
        <filter id="576720909">
            <message_arguments>
                <message_argument value="AbstractMemorylessAggregationOperator&lt;Domain, AggregateResult&gt;"/>
                <message_argument value="IntegerSumOperator"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/LongAverageOperator.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.LongAverageOperator">
        <filter comment="Internal implementation of the experimental aggregator API" id="576725006">
            <message_arguments>
                <message_argument value="IMultisetAggregationOperator&lt;Domain, Accumulator, AggregateResult&gt;"/>
                <message_argument value="LongAverageOperator"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/LongSumOperator.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.LongSumOperator">
        <filter id="576720909">
            <message_arguments>
                <message_argument value="AbstractMemorylessAggregationOperator&lt;Domain, AggregateResult&gt;"/>
                <message_argument value="LongSumOperator"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/avg.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.avg">
        <filter comment="Internal implementation of the experimental aggregator API" id="576725006">
            <message_arguments>
                <message_argument value="IAggregatorFactory"/>
                <message_argument value="avg"/>
            </message_arguments>
        </filter>
        <filter comment="Internal implementation of the experimental aggregator API" id="643842064">
            <message_arguments>
                <message_argument value="BoundAggregator"/>
                <message_argument value="avg"/>
                <message_argument value="getAggregatorLogic(Class&lt;?&gt;)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/count.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.count">
        <filter comment="IAggregatorFactory is non-final API" id="576725006">
            <message_arguments>
                <message_argument value="IAggregatorFactory"/>
                <message_argument value="count"/>
            </message_arguments>
        </filter>
        <filter comment="BoundAggregator is non-final API" id="643842064">
            <message_arguments>
                <message_argument value="BoundAggregator"/>
                <message_argument value="count"/>
                <message_argument value="getAggregatorLogic(Class&lt;?&gt;)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/max.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.max">
        <filter comment="IAggregatorFactory is non-final API" id="576725006">
            <message_arguments>
                <message_argument value="IAggregatorFactory"/>
                <message_argument value="max"/>
            </message_arguments>
        </filter>
        <filter comment="BoundAggregator is non-final API" id="643842064">
            <message_arguments>
                <message_argument value="BoundAggregator"/>
                <message_argument value="max"/>
                <message_argument value="getAggregatorLogic(Class&lt;?&gt;)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/min.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.min">
        <filter comment="IAggregatorFactory is non-final API" id="576725006">
            <message_arguments>
                <message_argument value="IAggregatorFactory"/>
                <message_argument value="min"/>
            </message_arguments>
        </filter>
        <filter comment="BoundAggregator is non-final API" id="643842064">
            <message_arguments>
                <message_argument value="BoundAggregator"/>
                <message_argument value="min"/>
                <message_argument value="getAggregatorLogic(Class&lt;?&gt;)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/aggregators/sum.java" type="org.eclipse.viatra.query.runtime.matchers.aggregators.sum">
        <filter comment="IAggregatorFactory is non-final API" id="576725006">
            <message_arguments>
                <message_argument value="IAggregatorFactory"/>
                <message_argument value="sum"/>
            </message_arguments>
        </filter>
        <filter comment="BoundAggregator is non-final API" id="643842064">
            <message_arguments>
                <message_argument value="BoundAggregator"/>
                <message_argument value="sum"/>
                <message_argument value="getAggregatorLogic(Class&lt;?&gt;)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/context/AbstractQueryMetaContext.java" type="org.eclipse.viatra.query.runtime.matchers.context.AbstractQueryMetaContext">
        <filter comment="Internal API implementation" id="576725006">
            <message_arguments>
                <message_argument value="IQueryMetaContext"/>
                <message_argument value="AbstractQueryMetaContext"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/context/AbstractQueryRuntimeContext.java" type="org.eclipse.viatra.query.runtime.matchers.context.AbstractQueryRuntimeContext">
        <filter comment="Internal API implementation" id="576725006">
            <message_arguments>
                <message_argument value="IQueryRuntimeContext"/>
                <message_argument value="AbstractQueryRuntimeContext"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/memories/DefaultMaskedTupleMemory.java" type="org.eclipse.viatra.query.runtime.matchers.memories.DefaultMaskedTupleMemory">
        <filter id="337682486">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.DefaultMaskedTupleMemory"/>
            </message_arguments>
        </filter>
        <filter id="1158676482">
            <message_arguments>
                <message_argument value="2.0"/>
                <message_argument value="2.2"/>
                <message_argument value="DefaultMaskedTupleMemory(TupleMask, CollectionsFactory.MemoryType, Object)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/memories/IdentityMaskedTupleMemory.java" type="org.eclipse.viatra.query.runtime.matchers.memories.IdentityMaskedTupleMemory">
        <filter id="337682486">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.IdentityMaskedTupleMemory"/>
            </message_arguments>
        </filter>
        <filter id="338849923">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.IdentityMaskedTupleMemory"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/memories/MaskedTupleMemory.java" type="org.eclipse.viatra.query.runtime.matchers.memories.MaskedTupleMemory">
        <filter id="337682486">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.MaskedTupleMemory"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/memories/NullaryMaskedTupleMemory.java" type="org.eclipse.viatra.query.runtime.matchers.memories.NullaryMaskedTupleMemory">
        <filter id="337682486">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.NullaryMaskedTupleMemory"/>
            </message_arguments>
        </filter>
        <filter id="338849923">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.NullaryMaskedTupleMemory"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/memories/UnaryMaskedTupleMemory.java" type="org.eclipse.viatra.query.runtime.matchers.memories.UnaryMaskedTupleMemory">
        <filter id="337682486">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.memories.UnaryMaskedTupleMemory"/>
            </message_arguments>
        </filter>
        <filter id="1158676482">
            <message_arguments>
                <message_argument value="2.0"/>
                <message_argument value="2.2"/>
                <message_argument value="UnaryMaskedTupleMemory(TupleMask, CollectionsFactory.MemoryType, Object)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/psystem/InitializablePQuery.java" type="org.eclipse.viatra.query.runtime.matchers.psystem.InitializablePQuery">
        <filter comment="Internal API implementation" id="576720909">
            <message_arguments>
                <message_argument value="PQuery"/>
                <message_argument value="InitializablePQuery"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/psystem/basicdeferred/AggregatorConstraint.java" type="org.eclipse.viatra.query.runtime.matchers.psystem.basicdeferred.AggregatorConstraint">
        <filter id="643842064">
            <message_arguments>
                <message_argument value="BoundAggregator"/>
                <message_argument value="AggregatorConstraint"/>
                <message_argument value="getAggregator()"/>
            </message_arguments>
        </filter>
        <filter id="643850349">
            <message_arguments>
                <message_argument value="BoundAggregator"/>
                <message_argument value="AggregatorConstraint"/>
                <message_argument value="AggregatorConstraint(BoundAggregator, PBody, Tuple, PQuery, PVariable, int)"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/psystem/queries/BasePQuery.java" type="org.eclipse.viatra.query.runtime.matchers.psystem.queries.BasePQuery">
        <filter comment="Internal API implementation" id="576725006">
            <message_arguments>
                <message_argument value="PQuery"/>
                <message_argument value="BasePQuery"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/psystem/rewriters/IRewriterTraceCollector.java" type="org.eclipse.viatra.query.runtime.matchers.psystem.rewriters.IRewriterTraceCollector">
        <filter comment="Internal API implementation" id="576720909">
            <message_arguments>
                <message_argument value="IPTraceableTraceProvider"/>
                <message_argument value="IRewriterTraceCollector"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/util/CollectionsFactory.java" type="org.eclipse.viatra.query.runtime.matchers.util.CollectionsFactory$ICollectionsFramework">
        <filter id="403804204">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.util.CollectionsFactory.ICollectionsFramework"/>
                <message_argument value="createTreeMap()"/>
            </message_arguments>
        </filter>
    </resource>
    <resource path="src/org/eclipse/viatra/query/runtime/matchers/util/IMultiLookup.java" type="org.eclipse.viatra.query.runtime.matchers.util.IMultiLookup">
        <filter id="403804204">
            <message_arguments>
                <message_argument value="org.eclipse.viatra.query.runtime.matchers.util.IMultiLookup"/>
                <message_argument value="isEmpty()"/>
            </message_arguments>
        </filter>
    </resource>
</component>
